---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app n8n
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: cloudnative-pg
      namespace: databases
    - name: onepassword-connect
      namespace: security
  values:
    controllers:
      n8n:
        strategy: RollingUpdate
        annotations:
          secret.reloader.stakater.com/reload: &secret n8n-external-secret
        initContainers:
          01-check-db-ready:
            image:
              repository: postgres
              tag: 16.6
            command: ['sh', '-c',
              'until pg_isready -h ${POSTGRESQL_HOST_INTERNAL} -p 5432;
              do echo Waiting for PostgreSQL database; sleep 5; done;']
          02-initdb:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.6
            envFrom:
              - secretRef:
                  name: *secret
          03-chown-data:
            image:
              repository: busybox
              tag: latest
            command: ["sh", "-c", "chown -R 1026:100 /home/node/.n8n && chmod -R 777 /home/node/.n8n"]
            securityContext:
              readOnlyRootFilesystem: true
              capabilities:
                drop: ["all"]
                add: ["CHOWN", "CHMOD"]
              runAsUser: 0
              runAsNonRoot: false
        containers:
          app:
            image:
              repository: n8nio/n8n
              tag: 1.82.1
            env:
              GENERIC_TIMEZONE: "${TIMEZONE}"
              EXECUTIONS_TIMEOUT: "600"
              EXECUTIONS_TIMEOUT_MAX: "1800"
              N8N_METRICS: "true"
              N8N_LOG_LEVEL: "info"
              N8N_PORT: &port "5678"
            envFrom:
              - secretRef:
                  name: *secret
    service:
      app:
        controller: n8n
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: internal
        hosts:
          - host: &host "n8n.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      data:
        enabled: true
        storageClass: nfs-csi
        accessMode: ReadWriteOnce
        type: persistentVolumeClaim
        retain: true
        size: 20Gi
        globalMounts:
          - path: /home/node/.n8n
            readOnly: false

