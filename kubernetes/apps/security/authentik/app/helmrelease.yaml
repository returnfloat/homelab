# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app authentik
  namespace: security
spec:
  interval: 15m
  chart:
    spec:
      chart: authentik
      version: 2023.10.7
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
      interval: 15m
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: external-secrets
      namespace: security
    - name: postgresql-bitnami
      namespace: databases
    - name: redis
      namespace: databases
  values:
    controller:
      annotations:
        secret.reloader.stakater.com/reload: &secret authentik-external-secret
    worker:
      replicas: 1
    initContainers:
      init-db:
        image: ghcr.io/onedr0p/postgres-init:14.9
        envFrom:
          - secretRef:
              name: *secret
    envFrom:
      - secretRef:
          name: *secret
    ingress:
      enabled: true
      ingressClassName: external
      annotations:
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
      hosts:
        - host: &host "auth.${SECRET_DOMAIN}"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: *host
          hosts:
            - *host
    authentik:
      email:
        host: "smtp.gmail.com"
        use_tls: true
        port: "587"
        from: "Authentik <authentik@${SECRET_DOMAIN}>"
      log_level: info
      outposts:
        container_image_base: ghcr.io/goauthentik/%(type)s:%(version)s
      error_reporting:
        enabled: false
    prometheus:
      serviceMonitor:
        create: true
      rules:
        create: true
    postgresql:
      enabled: false
    redis:
      enabled: false
    geoip:
      enabled: false
