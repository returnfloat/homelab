---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app miniflux
  namespace: media
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: miniflux
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: cloudnative-pg
      namespace: databases
    - name: onepassword-connect
      namespace: security
  values:
    controllers:
      miniflux:
        strategy: RollingUpdate
        annotations:
          secret.reloader.stakater.com/reload: &secret miniflux-external-secret
        containers:
          app:
            image:
              repository: miniflux/miniflux
              tag: 2.2.12
            env:
              RUN_MIGRATIONS: 1
              CREATE_ADMIN: 1
              OAUTH2_USER_CREATION: 1
              METRICS_COLLECTOR: 1
              CLEANUP_FREQUENCY_HOURS: 6
              CLEANUP_ARCHIVE_UNREAD_DAYS: 30
              CLEANUP_ARCHIVE_READ_DAYS: 30
              BASE_URL: "https://miniflux.${SECRET_DOMAIN}"
            envFrom:
              - secretRef:
                  name: *secret
        initContainers:
          01-check-db-ready:
            image:
              repository: postgres
              tag: 17.5
            command: ['sh', '-c',
              'until pg_isready -h ${POSTGRESQL_HOST_INTERNAL} -p 5432;
              do echo Waiting for PostgreSQL database; sleep 5; done;']
          02-initdb:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5
            envFrom:
              - secretRef:
                  name: *secret
    service:
      app:
        controller: miniflux
        ports:
          http:
            port: &port 8080
    serviceMonitor:
      app:
        serviceName: miniflux
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
