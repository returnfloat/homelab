---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: immich-db
  namespace: media
spec:
  instances: 1
  # ghcr.io/bo0tzz/cnpgvecto.rs:16.1-v0.1.11
  # ghcr.io/tensorchord/cloudnative-pgvecto.rs:16.1-v0.1.13
  imageName: ghcr.io/gabe565/cloudnativepg-vecto-rs:16.1-vectors0.1.11
  primaryUpdateStrategy: unsupervised
  enableSuperuserAccess: true
  storage:
    size: 20Gi
    storageClass: nfs-csi
  superuserSecret:
    name: immich-db-external-secret
  postgresql:
    shared_preload_libraries:
      - "vectors.so"
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    # ########################################################################################################
    # Minio bucket configuration for current backups. serverName corresponds to a folder name in the bucket.
    # Note: Change *currBucketFolder at every new recovery bootstrap.
    # ########################################################################################################
    barmanObjectStore:
      wal:
        compression: &compr bzip2
        maxParallel: 4
      destinationPath: &dest s3://immich-db/
      endpointURL: &minio http://minio.storage:9000
      serverName: &currBucketFolder immich-db-0
      s3Credentials: &s3creds
        accessKeyId:
          name: immich-db-external-secret
          key: aws-access-key-id
        secretAccessKey:
          name: immich-db-external-secret
          key: aws-secret-access-key

  # ##########################################################################################################
  # Bootstrap a brand new cluster with a new app database and owner.
  # ##########################################################################################################
  # bootstrap:
  #   initdb:
  #     database: immich
  #     owner: immich
  #     secret:
  #       name: immich-external-secret

  # ##########################################################################################################
  # Bootstrap a new cluster from a backup in the *prevBucketFolder folder in the bucket.
  # ##########################################################################################################
  # bootstrap:
  #   # use this to recover a net-new cluster from a backup
  #   recovery:
  #     source: &prevBucketFolder immich-db
  # externalClusters:
  #   # this represents the s3 backup to restore from. *nota-bene: the backup must be the same major version of the target cluster
  #   - name: *prevBucketFolder
  #     barmanObjectStore:
  #       wal:
  #         compression: *compr
  #         maxParallel: 4
  #       serverName: *prevBucketFolder
  #       destinationPath: *dest
  #       endpointURL: *minio
  #       s3Credentials: *s3creds
