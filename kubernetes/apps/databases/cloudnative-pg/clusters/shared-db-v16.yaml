---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgresql-v16
  namespace: databases
spec:
  instances: 2
  imageName: ghcr.io/cloudnative-pg/postgresql:16.2
  primaryUpdateStrategy: unsupervised
  enableSuperuserAccess: true
  storage:
    size: 30Gi
    storageClass: nfs-csi
  superuserSecret:
    name: postgresql-superuser-secret
  postgresql:
    parameters:
      max_connections: "300"
      shared_buffers: "256MB"
      timezone: "America/Los_Angeles"
  resources:
    requests:
      memory: "512Mi"
    limits:
      memory: "1024Mi"
      cpu: "1000m"
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    # ########################################################################################################
    # Minio bucket configuration for current backups. serverName corresponds to a folder name in the bucket.
    # Note: Change *currBucketFolder at every new recovery bootstrap.
    # ########################################################################################################
    barmanObjectStore:
      wal:
        compression: &compr bzip2
        maxParallel: 4
      destinationPath: &dest s3://postgresql/
      endpointURL: &minio http://minio.storage:9000
      serverName: &currBucketFolder postgres-v16-1
      s3Credentials: &s3creds
        accessKeyId:
          name: shared-db-external-secret
          key: aws-access-key-id
        secretAccessKey:
          name: shared-db-external-secret
          key: aws-secret-access-key
  # ##########################################################################################################
  # Bootstrap a brand new cluster with a new app database and owner.
  # ##########################################################################################################
  # bootstrap:
  #   initdb:
  #     database: akash
  #     owner: akash
  #     secret:
  #       name: shared-db-external-secret

  # ##########################################################################################################
  # Bootstrap a new cluster from a backup in the *prevBucketFolder folder in the bucket.
  # ##########################################################################################################
  bootstrap:
    # Use this to recover a net-new cluster from a backup
    recovery:
      source: &prevBucketFolder postgres-v16-0
  externalClusters:
    # This represents the s3 backup to restore from, the backup must be the same major version of the target cluster
    - name: *prevBucketFolder
      barmanObjectStore:
        wal:
          compression: *compr
          maxParallel: 4
        serverName: *prevBucketFolder
        destinationPath: *dest
        endpointURL: *minio
        s3Credentials: *s3creds

  # ##########################################################################################################
  # Bootstrap from an existing live cluster (same PostgreSQL major version)
  # ##########################################################################################################
  # bootstrap:
  #   pg_basebackup:
  #     source: postgresql-bitnami
  # externalClusters:
  #   # This must be the same PostgreSQL major version as the new cluster
  #   - name: postgresql-bitnami
  #     connectionParameters:
  #       host: postgresql-bitnami.databases.svc.cluster.local.
  #       user: postgres
  #     password:
  #       name: postgresql-superuser-secret
  #       key: password

  # ##########################################################################################################
  # Bootstrap from an existing live cluster (destination PostgreSQL major version higher than source)
  # monolith - Bootstrap the entire cluster
  # microservice - Bootstrap a single database
  # ##########################################################################################################
  # bootstrap:
  #   initdb:
  #     import:
  #       # type: microservice
  #       # databases:
  #       #   - "akash"
  #       # source:
  #       #   externalCluster: postgresql-bitnami
  #       type: monolith
  #       databases:
  #         - "*"
  #       roles:
  #         - "*"
  #       source:
  #         externalCluster: postgresql-bitnami
  # externalClusters:
  #   # This must be equal or higher PostgreSQL major version as the new cluster
  #   - name: postgresql-bitnami
  #     connectionParameters:
  #       host: postgresql-bitnami.databases
  #       user: postgres
  #     password:
  #       name: postgresql-superuser-secret
  #       key: password

