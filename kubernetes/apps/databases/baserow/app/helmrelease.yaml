---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app baserow
  namespace: databases
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: baserow
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: cloudnative-pg
      namespace: databases
    - name: redis
      namespace: databases
    - name: onepassword-connect
      namespace: security
  values:
    controllers:
      baserow:
        strategy: RollingUpdate
        annotations:
          secret.reloader.stakater.com/reload: &secret baserow-external-secret
        initContainers:
          01-check-db-ready:
            image:
              repository: postgres
              tag: 17.5
            command: ['sh', '-c',
              'until pg_isready -h ${POSTGRESQL_HOST_INTERNAL} -p 5432;
              do echo Waiting for PostgreSQL database; sleep 5; done;']
          02-initdb:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5
            envFrom:
              - secretRef:
                  name: *secret
          03-chown-data:
            image:
              repository: busybox
              tag: latest
            command: ["sh", "-c", "chown -R 9999:9999 /baserow/data"]
            securityContext:
              readOnlyRootFilesystem: true
              capabilities:
                drop: ["all"]
                add: ["CHOWN", "CHMOD"]
              runAsUser: 0
              runAsNonRoot: false
        containers:
          app:
            image:
              repository: baserow/baserow
              tag: 1.35.1
            envFrom:
              - secretRef:
                  name: *secret
    service:
      app:
        controller: baserow
        ports:
          http:
            port: &port 80
          https:
            port: 443
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      data:
        enabled: true
        storageClass: nfs-csi
        accessMode: ReadWriteOnce
        type: persistentVolumeClaim
        retain: true
        size: 20Gi
        globalMounts:
          - path: /baserow/data
            readOnly: false
