---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app nocodb
  namespace: databases
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: cloudnative-pg
      namespace: databases
    - name: redis
      namespace: databases
    - name: onepassword-connect
      namespace: security
  values:
    controllers:
      nocodb:
        strategy: RollingUpdate
        annotations:
          secret.reloader.stakater.com/reload: &secret "nocodb-external-secret"
        initContainers:
          01-check-db-ready:
            image:
              repository: postgres
              tag: 17.5
            command: ['sh', '-c',
              'until pg_isready -h ${POSTGRESQL_HOST_INTERNAL} -p 5432;
              do echo Waiting for PostgreSQL database; sleep 5; done;']
          02-initdb:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5
            envFrom:
              - secretRef:
                  name: *secret
          # 02-chown-data:
          #   image:
          #     repository: busybox
          #     tag: latest
          #   command: ["sh", "-c", "chown -R 9999:9999 /usr/app/data/"]
          #   securityContext:
          #     readOnlyRootFilesystem: true
          #     capabilities:
          #       drop: ["all"]
          #       add: ["CHOWN", "CHMOD"]
          #     runAsUser: 0
          #     runAsNonRoot: false
        containers:
          app:
            image:
              repository: nocodb/nocodb
              tag: 0.264.6
            env:
              PORT: &port 8080
              NC_DISABLE_TELE: "true"
              NC_DISABLE_ERR_REPORT: "true"
              NC_SECURE_ATTACHMENTS: "true"
              NC_AUTOMATION_LOG_LEVEL: "ERROR"
    service:
      app:
        controller: nocodb
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      data:
        enabled: true
        storageClass: nfs-csi
        accessMode: ReadWriteOnce
        type: persistentVolumeClaim
        retain: true
        size: 20Gi
        globalMounts:
          - path: /usr/app/data/
            readOnly: false
