---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: grafana-external-secret
  namespace: monitoring
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  refreshInterval: 30m
  target:
    creationPolicy: Owner
    deletionPolicy: "Delete"
    template:
      engineVersion: v2
      data:
        # grafana
        admin-user: "{{ .GRAFANA_ADMIN_USER }}"
        admin-password: "{{ .GRAFANA_ADMIN_PASS }}"
        GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
        GF_AUTH_GENERIC_OAUTH_NAME: "authentik"
        GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "{{ .GRAFANA_OIDC_CLIENT_ID }}"
        GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "{{ .GRAFANA_OIDC_CLIENT_SECRET }}"
        GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email"
        GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://auth.{{ .HOMELAB_SECRET_DOMAIN }}/application/o/authorize/"
        GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://auth.{{ .HOMELAB_SECRET_DOMAIN }}/application/o/token/"
        GF_AUTH_GENERIC_OAUTH_API_URL: "https://auth.{{ .HOMELAB_SECRET_DOMAIN }}/application/o/userinfo/"
        GF_AUTH_SIGNOUT_REDIRECT_URL: "https://auth.{{ .HOMELAB_SECRET_DOMAIN }}/application/o/grafana/end-session/"
        # Optionally enable auto-login (bypasses Grafana login screen)
        GF_AUTH_OAUTH_AUTO_LOGIN: "true"
        # Optionally map user groups to Grafana roles
        GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups[*], 'homelab_admins') && 'Admin' || contains(groups[*], 'homelab_users') && 'Editor' || 'Viewer'"
        GF_DATABASE_NAME: &dbname "{{ .GRAFANA_POSTGRES_DB }}"
        GF_DATABASE_HOST: "{{ .POSTGRESQL_HOST }}:5432"
        GF_DATABASE_USER: &dbuser "{{ .GRAFANA_POSTGRES_USER }}"
        GF_DATABASE_PASSWORD: &dbpass "{{ .GRAFANA_POSTGRES_PASS }}"
        GF_DATABASE_SSL_MODE: disable
        GF_DATABASE_TYPE: postgres
        # postgres init
        INIT_POSTGRES_DBNAME: *dbname
        INIT_POSTGRES_HOST: "{{ .POSTGRESQL_HOST }}"
        INIT_POSTGRES_USER: *dbuser
        INIT_POSTGRES_PASS: *dbpass
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRESQL_SUPERUSER_PASS }}"
  dataFrom:
    - extract:
        key: homelab-external-secret
    - extract:
        key: postgresql-external-secret
    - extract:
        key: grafana-external-secret
