# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app paperless
  namespace: utilities
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: cloudnative-pg
      namespace: databases
    - name: onepassword-connect
      namespace: security
  values:
    controllers:
      paperless:
        strategy: RollingUpdate
        annotations:
          secret.reloader.stakater.com/reload: &secret paperless-external-secret
        initContainers:
          01-initdb:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.2
            envFrom:
              - secretRef:
                  name: *secret
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.8.6
            env:
              PAPERLESS_PORT: &port 80
              PAPERLESS_TIME_ZONE: "${TIMEZONE}"
              USERMAP_UID: "1026"
              USERMAP_GID: "100"
              PAPERLESS_ENABLE_HTTP_REMOTE_USER: "true"
              PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: "HTTP_X_AUTHENTIK_USERNAME"
              PAPERLESS_URL: "https://paperless.${SECRET_DOMAIN}"
              PAPERLESS_CONSUMER_POLLING: "120"
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMPTION_DIR: "/data/nfs/consume"
              PAPERLESS_DATA_DIR: "/library/data"
              PAPERLESS_TRASH_DIR: "/library/trash"
              PAPERLESS_MEDIA_ROOT: "/library/media"
              PAPERLESS_STATICDIR: "/library/static"
              PAPERLESS_EXPORT_DIR: "/data/nfs/export"
              PAPERLESS_OCR_LANGUAGES: "eng hin guj kan"
              PAPERLESS_OCR_LANGUAGE: "eng"
              PAPERLESS_FILENAME_FORMAT: "{created_year}/{correspondent}/{created_month}/{title}"
              PAPERLESS_TIKA_ENABLED: "true"
              PAPERLESS_TIKA_ENDPOINT: "http://localhost:9998"
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: "http://localhost:3000"
            envFrom:
              - secretRef:
                  name: paperless-external-secret
            probes:
              startup:
                spec:
                  initialDelaySeconds: 60
          gotenburg:
            image:
              repository: thecodingmachine/gotenberg
              tag: 8.5.0
            env:
              DISABLE_GOOGLE_CHROME: "1"
          tika:
            image:
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.1-full
    service:
      app:
        controller: paperless
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
            https://paperless.${SECRET_DOMAIN}/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://paperless.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: &host "paperless.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      library:
        enabled: true
        storageClass: nfs-csi
        accessMode: ReadWriteOnce
        type: persistentVolumeClaim
        size: 5Gi
        advancedMounts:
          paperless:
            app:
              - path: /library
                readOnly: false
      nfs-data:
        enabled: true
        storageClass: nfs-csi
        accessMode: ReadWriteOnce
        type: persistentVolumeClaim
        size: 5Gi
        advancedMounts:
          paperless:
            app:
              - path: /data/nfs
                readOnly: false
