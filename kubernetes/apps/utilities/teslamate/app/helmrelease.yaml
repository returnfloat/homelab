---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app teslamate
  namespace: utilities
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: teslamate
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: cloudnative-pg
      namespace: databases
    - name: mosquitto
      namespace: databases
  values:
    controllers:
      teslamate:
        strategy: RollingUpdate
        annotations:
          secret.reloader.stakater.com/reload: "teslamate-external-secret,teslamate-grafana-datasource"
        initContainers:
          01-check-db-ready:
            image:
              repository: postgres
              tag: 17.5
            command: ['sh', '-c',
              'until pg_isready -h ${POSTGRESQL_HOST_INTERNAL} -p 5432;
              do echo Waiting for PostgreSQL database; sleep 5; done;']
          02-initdb:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5
            envFrom:
              - secretRef:
                  name: teslamate-external-secret
        containers:
          app:
            image:
              repository: teslamate/teslamate
              tag: 2.1.1
            env:
              TZ: "${TIMEZONE}"
              DISABLE_MQTT: "false"
            envFrom:
              - secretRef:
                  name: teslamate-external-secret
    service:
      app:
        controller: teslamate
        ports:
          http:
            port: &port 4000
    route:
      app:
        hostnames: ["teslamate.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    # ingress:
    #   app:
    #     enabled: true
    #     className: internal
    #     annotations:
    #       nginx.ingress.kubernetes.io/auth-url: |-
    #         http://ak-outpost-authentik-embedded-outpost.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    #       nginx.ingress.kubernetes.io/auth-signin: |-
    #         https://teslamate.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
    #       nginx.ingress.kubernetes.io/auth-response-headers: |-
    #         Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid
    #       nginx.ingress.kubernetes.io/auth-snippet: |
    #         proxy_set_header X-Forwarded-Host $http_host;
    #     hosts:
    #       - host: &host "teslamate.${SECRET_DOMAIN}"
    #         paths:
    #           - path: /
    #             pathType: Prefix
    #             service:
    #               identifier: app
    #               port: http
    #     tls:
    #       - hosts:
    #           - *host
