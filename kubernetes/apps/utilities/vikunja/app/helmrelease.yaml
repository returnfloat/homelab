---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app vikunja
  namespace: utilities
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: vikunja
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: cloudnative-pg
      namespace: databases
    - name: onepassword-connect
      namespace: security
  values:
    controllers:
      vikunja:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
          secret.reloader.stakater.com/reload: &secret vikunja-external-secret
          configmap.reloader.stakater.com/reload: vikunja-configmap
        initContainers:
          01-check-db-ready:
            image:
              repository: postgres
              tag: 17.6
            command: ['sh', '-c',
              'until pg_isready -h ${POSTGRESQL_HOST_INTERNAL} -p 5432;
              do echo Waiting for PostgreSQL database; sleep 5; done;']
          02-initdb:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6
            envFrom:
              - secretRef:
                  name: *secret
        containers:
          app:
            image:
              repository: vikunja/api
              tag: 0.22.1
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: vikunja-external-secret
            env:
              VIKUNJA_SERVICE_TIMEZONE: "${TIMEZONE}"
              VIKUNJA_SERVICE_PUBLICURL: "https://vikunja.${SECRET_DOMAIN}/"
              VIKUNJA_SERVICE_ENABLEREGISTRATION: "false"
              VIKUNJA_SERVICE_ENABLEUSERDELETION: "false"
              VIKUNJA_LOG_LEVEL: "INFO"
          frontend:
            image:
              repository: vikunja/frontend
              tag: 0.22.1
          proxy:
            image:
              repository: caddy
              tag: 2.10.2-alpine
    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 8080
    route:
      app:
        hostnames: ["vikunja.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      caddy-config:
        type: configMap
        name: vikunja-caddy-config
        globalMounts:
          - path: /etc/caddy/Caddyfile
            subPath: Caddyfile
      vikunja-config:
        type: secret
        name: vikunja-external-config
        globalMounts:
          - path: /etc/vikunja/config.yml
            subPath: config.yaml
      config:
        enabled: true
        storageClass: nfs-csi
        accessMode: ReadWriteOnce
        type: persistentVolumeClaim
        size: 10Gi
        retain: true
        globalMounts:
          - path: /app/vikunja/files
